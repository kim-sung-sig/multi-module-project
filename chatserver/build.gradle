// chat-core
plugins {
	id 'java'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
}

tasks.named('bootJar'){ // bootJar 세팅을 끄기
	enabled = true
}

dependencies {

	implementation project(':common')

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation "org.postgresql:postgresql"

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// docker-compose
	runtimeOnly 'org.springframework.boot:spring-boot-docker-compose'

	// spring cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}