plugins {
	id 'java'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'com.google.protobuf' version '0.9.4'
}
tasks.named('bootJar'){ // bootJar 세팅을 끄기
	enabled = true
}

ext {
//	grpcVersion = '1.63.0'
//	springGrpcVersion = "0.8.0"
}

//protobuf {
//	protoc {
//		artifact = "com.google.protobuf:protoc:3.25.3"
//	}
//	plugins {
//		grpc {
//			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
//		}
//	}
//	generateProtoTasks {
//		all().each { task ->
//			task.plugins {
//				grpc {
//					option 'jakarta_omit'
//					option '@generated=omit'
//				}
//			}
//		}
//	}
//}

// 'clean' 작업 설정
//tasks.named('clean') {
//	doFirst {
//		delete 'build/generated/source/proto' // 프로토콜 버퍼 생성된 디렉토리 삭제
//	}
//}

//sourceSets {
//	main {
//		java {
//			srcDirs 'build/generated/source/proto/main/grpc'
//			srcDirs 'build/generated/source/proto/main/java'
//		}
//	}
//}

dependencies {
	implementation project(':common')

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.security:spring-security-messaging'
	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
//	implementation 'io.grpc:grpc-services'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.springframework:spring-jdbc'
	implementation('org.springframework.cloud:spring-cloud-starter-config') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
	}
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
	}

//	implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'io.r2dbc:r2dbc-h2'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.postgresql:r2dbc-postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
//	testImplementation 'org.springframework.grpc:spring-grpc-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
